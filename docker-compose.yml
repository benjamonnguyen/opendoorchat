version: '2.23.3'

services:
  backend:
    build:
      context: .
      dockerfile: ./cmd/backend/Dockerfile
    volumes:
    - ./cmd/backend/config.yml:/config.yml:ro
    restart: unless-stopped
    ports:
    - "8080:8080"
    depends_on:
    - auth_server
  frontend:
    build:
      context: .
      dockerfile: ./cmd/frontend/Dockerfile
    volumes:
    - ./cmd/frontend/config.yml:/config.yml:ro
    - ./frontend/public:/public:ro
    restart: unless-stopped
    ports:
    - "3000:3000"
    depends_on:
    - backend
  inbound-smtp-server:
    build:
        context: ./inbound-smtp-server
        dockerfile: Dockerfile
    ports:
      - "25:25"
  auth_server:
    restart: always
    image: docker.io/casbin/casdoor:latest
    platform: linux/amd64
    entrypoint: /bin/sh -c './server --createDatabase=true'
    ports:
      - "8000:8000"
    depends_on:
      - db
    environment:
      RUNNING_IN_DOCKER: "true"
    volumes:
      - ./casbin.conf:/conf/app.conf
  db:
    restart: always
    image: docker.io/postgres:16.2
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: ${DB_PASS}
    volumes:
      - pgdata_opendoor:/var/lib/mysql

volumes:
  pgdata_opendoor: